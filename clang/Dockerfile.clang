FROM clang-toolchain-base AS build_image

ARG LLVM_VERSION
WORKDIR /src/clang

RUN curl --fail-early --location https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-${LLVM_VERSION}.tar.gz \
  | tar --gz --extract --strip-components=1 --file -

ARG SRC_SYSROOT_DIR
ARG INSTALL_DIR
COPY "${SRC_SYSROOT_DIR}" "${INSTALL_DIR}"

ARG SRC_CMAKE_DIR
ENV CMAKE_DIR="/opt/cmake"
COPY "${SRC_CMAKE_DIR}" "${CMAKE_DIR}"
ENV PATH="${CMAKE_DIR}/bin:${PATH}"

ARG SRC_HOST_COMPILER_DIR
ENV HOST_COMPILER_DIR="/opt/cc-x86_64-host"
COPY "${SRC_HOST_COMPILER_DIR}" "${HOST_COMPILER_DIR}"
ENV PATH="${HOST_COMPILER_DIR}/bin:${PATH}"

# Set to number of physical cores
ARG PARALLEL_COMPILE_JOBS
# Set to floor(Available RAM / 15GB)
ARG PARALLEL_LINK_JOBS
# Set depending on LLVM version
ARG ENABLE_PROJECTS
# Set depending on LLVM version
ARG ENABLE_RUNTIMES="libunwind;libcxxabi;pstl;libcxx;compiler-rt;openmp"
# Set to ON if host compiler is Clang
ARG ENABLE_LIBCXX=OFF

WORKDIR /src/clang/build
RUN cmake -G "Ninja"                                    \
  -DCMAKE_BUILD_TYPE=Release                            \
  -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}"               \
  -DLLVM_ENABLE_PROJECTS="${ENABLE_PROJECTS}"           \
  -DLLVM_ENABLE_RUNTIMES="${ENABLE_RUNTIMES}"           \
  -DLLVM_TARGETS_TO_BUILD=X86                           \
  -DBUILD_SHARED_LIBS=OFF                               \
  -DLLVM_ENABLE_BINDINGS=OFF                            \
  -DLLVM_ENABLE_EH=ON                                   \
  -DLLVM_ENABLE_LIBCXX=${ENABLE_LIBCXX}                 \
  -DLLVM_ENABLE_LLD=${ENABLE_LIBCXX}                    \
  -DLLVM_ENABLE_LTO=${ENABLE_LIBCXX}                    \
  -DLLVM_ENABLE_RTTI=ON                                 \
  -DLLVM_INCLUDE_BENCHMARKS=OFF                         \
  -DLLVM_INCLUDE_EXAMPLES=OFF                           \
  -DLLVM_INCLUDE_TESTS=OFF                              \
  -DLLVM_INSTALL_UTILS=ON                               \
  -DLLVM_STATIC_LINK_CXX_STDLIB=ON                      \
  -DLLVM_PARALLEL_COMPILE_JOBS=${PARALLEL_COMPILE_JOBS} \
  -DLLVM_PARALLEL_LINK_JOBS=${PARALLEL_LINK_JOBS}       \
  -DDEFAULT_SYSROOT="../"                               \
  -DCLANG_DEFAULT_LINKER=lld                            \
  -DCLANG_DEFAULT_CXX_STDLIB=libc++                     \
  -DCLANG_DEFAULT_RTLIB=compiler-rt                     \
  -DCLANG_DEFAULT_UNWINDLIB=libunwind                   \
  ../llvm
RUN cmake --build . --target install

# ----------------------------------------------------------------------------------------------------------------

FROM alpine:latest

ARG INSTALL_DIR
COPY --from=build_image "${INSTALL_DIR}" "${INSTALL_DIR}"
