FROM clang-toolchain-base AS build_image

ARG LLVM_VERSION
WORKDIR /src/llvm-project

RUN curl --fail-early --location https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-${LLVM_VERSION}.tar.gz \
  | tar --gz --extract --strip-components=1 --file -

ARG SRC_HOST_COMPILER_DIR
ENV HOST_COMPILER_DIR="/opt/cc-x86_64-host"
COPY "${SRC_HOST_COMPILER_DIR}" "${HOST_COMPILER_DIR}"
ENV PATH="${HOST_COMPILER_DIR}/bin:${PATH}"

COPY ./cmake/ClangToolChain.cmake ./
COPY ./cmake/caches ./clang/cmake/caches

ENV PATCHES_PREFIX="/var/llvm_patches"
ENV PATCHES_DIR="${PATCHES_PREFIX}/${LLVM_VERSION}"
COPY ./patches ${PATCHES_PREFIX}

# Run all patches chronological if they exists for currently built version
RUN mkdir -p "${PATCHES_DIR}" && find "${PATCHES_DIR}" -type f | sort | xargs -r -I{} sh -c 'patch -p1 --batch < "{}"'

ARG INSTALL_DIR
WORKDIR /src/llvm-project/build
RUN cmake -G "Ninja"                                                                     \
  -DCMAKE_TOOLCHAIN_FILE=../ClangToolChain.cmake                                         \
  -DCMAKE_BUILD_TYPE=Release                                                             \
  -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}"                                                \
  -C ../clang/cmake/caches/BuildLibClang.cmake                                           \
  ../llvm
RUN ninja toolchain-distribution
RUN ninja install-toolchain-distribution-stripped


# ----------------------------------------------------------------------------------------------------------------

FROM alpine:latest

ARG INSTALL_DIR
COPY --from=build_image "${INSTALL_DIR}/lib" "${INSTALL_DIR}"
